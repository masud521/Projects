library(tidyverse)
library(dplyr)
library(stringr)
library(readr)
library(here)
# Load data from first csv file
halloween_candies <-
read_csv(here("clean_data/halloween_candies.csv"), guess_max = 1000001)
# What is the total number of candy ratings given across the three years
halloween_candies %>%
drop_na()%>%
group_by(ratings)%>%
summarise(candy_ratings = n()) %>%
summarise(total_ratings = sum(candy_ratings))
# What was the average age of people who are going out trick or treating and the average age of people 3. not going trick or treating?
halloween_candies %>%
group_by(going_out) %>%
summarise(avg_age = mean(age, na.rm = TRUE))
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
filter(!c("any_full_sized_candy_bar")) %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
filter(candies != "any_full_sized_candy_bar")) %>%
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
filter(candies != "any_full_sized_candy_bar") %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
top_n(1)
# For each of joy, despair and meh, which candy bar revived the most of these ratings?
halloween_candies %>%
drop_na() %>%
group_by(ratings, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(1)
# How many people rated Starburst as despair
halloween_candies %>%
drop_na() %>%
filter(candies == 'starburst') %>%
group_by(candies, ratings) %>%
summarise(starburst_ratings = n()) %>%
filter(ratings == 'despair')
# What was the most popular candy bar by this rating system for each gender in the dataset?
halloween_candies %>%
drop_na() %>%
filter(!c(gender == "not mentioned")) %>%
group_by(gender, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
top_n(2)
# What was the most popular candy bar by this rating system for each gender in the dataset?
halloween_candies %>%
drop_na() %>%
filter(!c(gender == "not mentioned")) %>%
group_by(gender, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar")
# What was the most popular candy bar by this rating system for each gender in the dataset?
halloween_candies %>%
drop_na() %>%
filter(!c(gender == "not mentioned")) %>%
group_by(gender, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
top_n(1)
# What was the most popular candy bar by this rating system for each gender in the dataset?
halloween_candies %>%
drop_na() %>%
filter(!c(gender == "not mentioned")) %>%
group_by(gender, candies) %>%
summarise(candy_ratings = n()) %>%
top_n(1)
# What was the most popular candy bar by this rating system for each gender in the dataset?
halloween_candies %>%
drop_na() %>%
filter(!c(gender == "not mentioned")) %>%
group_by(gender, candies) %>%
summarise(candy_ratings = n()) %>%
top_n(1)
# What was the most popular candy bar in each year
halloween_candies %>%
drop_na(ratings) %>%
group_by(year, candies) %>%
summarise(popular_ratings = n()) %>%
filter(candies != "any_full_sized_candy_bar") %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(country_ratings = n()) %>%
arrange(desc(country_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(ratings = n()) %>%
arrange(desc(ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(ratings = n()) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(ratings = n()) %>%
filter(ratings == max(ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(ratings = n()) %>%
filter(ratings == max(ratings)) %>%
arrange(desc(ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
arrange(desc(candy_ratings)) %>%
top_n(2)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
arrange(desc(candy_ratings)) %>%
top_n(3)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
arrange(desc(candy_ratings)) %>%
top_n(5)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
arrange(desc(candy_ratings)) %>%
top_n(10)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(10)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
filter(candy_ratings == max(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(!c(year == 2015)) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
top_n(3)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
filter(!c(year == 2015 | is.na(ratings))) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
filter(!c(year == 2015 | is.na(candies))) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(year != 2015) %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(year != 2015) %>%
filter(candies != "any_full_sized_candy_bar") %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
# What was the most popular candy bar by this rating for people in US, Canada, UK and all other countries
halloween_candies %>%
drop_na() %>%
filter(year != 2015) %>%
filter(candies != "cash_or_other_forms_of_legal_tender") %>%
group_by(country, candies) %>%
summarise(candy_ratings = n()) %>%
arrange(desc(candy_ratings)) %>%
top_n(1)
rm(halloween_candies)
library(tidyverse)
library(janitor)
library(readr)
library(dplyr)
library(stringr)
# Task 4 Halloween Candy data
# Load data from first csv file
candies_2015 <- read_xlsx("raw_data/boing-boing-candy-2015.xlsx")
candies_2016 <- read_xlsx("raw_data/boing-boing-candy-2016.xlsx")
candies_2017 <- read_xlsx("raw_data/boing-boing-candy-2017.xlsx")
# 1.2 This data is not in tidy form and needs some cleaning before we start analysising.
# start with some cleaning of columns
candies_2015 <- candies_2015 %>%
clean_names()
candies_2016 <- candies_2016 %>%
clean_names()
candies_2017 <- candies_2017 %>%
clean_names()
#remove q6 from columns names of candies data 2017 so they can match with data 2015 and 2016()
names(candies_2017) <- str_remove(names(candies_2017), "q[0-9]+_")
# I have also noted some in uppercase and lowercase, so we change all text to lower case for better analysis of the data
# also, change the text to lower case of columns and rows
candies_2015 <- mutate_all(candies_2015, .funs = tolower)
candies_2016 <- mutate_all(candies_2016, .funs = tolower)
candies_2017 <- mutate_all(candies_2017, .funs = tolower)
# Renaming column in data set 2017 to match columns in 2016 and 2015
candies_2017 <-
candies_2017 %>%
rename(x100_grand_bar = `100_grand_bar`)
# Reshape the data from wide to long format for all 3 data sets, so that for each candy bar column becomes a row.
# Name the column candies  and values into ratings
# Select columns going to use analyse data
pivot_candies_2015 <-
candies_2015 %>%
pivot_longer(butterfinger:york_peppermint_patties, names_to = "candies", values_to = "ratings") %>%
select(how_old_are_you, are_you_going_actually_going_trick_or_treating_yourself, candies, ratings)
pivot_candies_2016 <-
candies_2016 %>%
pivot_longer(x100_grand_bar:york_peppermint_patties, names_to = "candies", values_to = "ratings") %>%
select(are_you_going_actually_going_trick_or_treating_yourself, your_gender, how_old_are_you, which_country_do_you_live_in, candies, ratings)
pivot_candies_2017 <-
candies_2017 %>%
pivot_longer(x100_grand_bar:york_peppermint_patties, names_to = "candies", values_to = "ratings") %>%
select(going_out, gender, age, country, candies, ratings)
# Renaming some columns in data set to match columns
pivot_candies_2015 <-
pivot_candies_2015 %>%
rename(age = how_old_are_you, going_out = are_you_going_actually_going_trick_or_treating_yourself)
pivot_candies_2016 <-
pivot_candies_2016 %>%
rename(going_out = are_you_going_actually_going_trick_or_treating_yourself, age = how_old_are_you, country = which_country_do_you_live_in, gender = your_gender)
# Make new variables
# Add new columns to identify the in which year data is collected
candies_2015_data <-
pivot_candies_2015 %>%
add_column(country = NA, gender = NA, year = 2015)
candies_2016_data <-
pivot_candies_2016 %>%
add_column(year = 2016)
candies_2017_data <-
pivot_candies_2017 %>%
add_column(year = 2017)
# Now we needs count missing values
# counting missing values
candies_2015_data %>%
summarise(count = sum(is.na(ratings)))
candies_2016_data %>%
summarise(count = sum(is.na(ratings)))
candies_2017_data %>%
summarise(count = sum(is.na(ratings)))
# Missing values
# There are so many missing values so we need deciede whether to keep them of drop them
# There are lots of missing values but I can drop them off later while analysing
# Combine data from all 3 data sets
candies_halloween_data <-
bind_rows(candies_2015_data, candies_2016_data, candies_2017_data)
# now we have a combined data set from 2015, 2016, 2017.
# I have notice some discrepancies in country columns which needs to address before we proceed
# 3 countries UK, USA and Canada needs correction
# first create a vector with mispellings
#USA
misspellings_usa <- c("united states of america", "the united states of america", "alaska", "united states", "ussa", "usa!", "us", "u.s.a.", "usa (i think but it's an election year so who can really tell)","the best one - usa", "america", "'merica", "usa! usa!", "usa",
"usa! usa! usa!","usa!!!!!!", "usaa", "usa? hard to tell anymore..", "usa usa usa usa", "usausausa", "usas", "ahem....amerca", "atlantis", "the united states", "united sates", "united stetes", "united  states of america",
"united state", "united stated", "united ststes","united statss","united state", "united staes", "united statea", "unied states", "unites states", "units states", "us of a", "the yoo ess of aaayyyyyy", "u.s.", "trumpistan", "u s a", "u s",
"unhinged states", "unite states", "usa usa usa", "the yoo ess of aaayyyyyy", "usa usa usa!!!!","a")
usa_states <- c(1,30,32,35,44,45,46,47,51,54)
#UK
misspellings_uk <- c("england", "endland", "united kindom", "united kingdom", "u.k.", "ud")
# Canada
misspellings_canada <- c("can", "canada`", "canae")
# replace misspellings with usa, uk, canada
halloween_candies <-
candies_halloween_data %>%
mutate(country = if_else(country %in% misspellings_usa, "USA", country),
country = if_else(country %in% usa_states, "USA", country),
country = if_else(country %in% misspellings_uk, "UK", country),
country = if_else(country %in% misspellings_canada, "Canada", country))
# use mutate function to change age cloumn to numeric
halloween_candies <-
halloween_candies %>%
mutate(age = as.numeric(age),
age = if_else(age > 99, NA_real_, age))
# use mutate fuction to change gender column to "not mentioned"
gender_no <- c("i'd rather not say")
halloween_candies <-
halloween_candies %>%
mutate(gender = if_else(gender %in% gender_no, "not given", gender))
